// use server'
'use server';
/**
 * @fileOverview AI-powered personal statement generator.
 *
 * - generateBio - A function that generates a compelling bio based on keywords and experiences.
 * - GenerateBioInput - The input type for the generateBio function.
 * - GenerateBioOutput - The return type for the generateBio function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateBioInputSchema = z.object({
  keywords: z
    .string()
    .describe('Keywords that should be included or emphasized in the bio.'),
  experiences: z
    .string()
    .describe('A description of the user history of experiences.'),
  context: z
    .string()
    .optional()
    .describe('The context for which the bio will be used.'),
});
export type GenerateBioInput = z.infer<typeof GenerateBioInputSchema>;

const GenerateBioOutputSchema = z.object({
  bio: z.string().describe('A compelling bio generated by the AI.'),
});
export type GenerateBioOutput = z.infer<typeof GenerateBioOutputSchema>;

export async function generateBio(input: GenerateBioInput): Promise<GenerateBioOutput> {
  return generateBioFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateBioPrompt',
  input: {schema: GenerateBioInputSchema},
  output: {schema: GenerateBioOutputSchema},
  prompt: `You are an AI assistant that specializes in generating professional biographies.

You will be provided with keywords, experiences, and context. Use this information to craft a compelling bio.

Keywords: {{{keywords}}}
Experiences: {{{experiences}}}
Context: {{{context}}}

Bio: `,
});

const generateBioFlow = ai.defineFlow(
  {
    name: 'generateBioFlow',
    inputSchema: GenerateBioInputSchema,
    outputSchema: GenerateBioOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
